// Objective-C API for talking to github.com/mandelmonkey/lndmobile/lightning Go package.
//   gobind -lang=objc github.com/mandelmonkey/lndmobile/lightning
//
// File is generated by gobind. Do not edit.

#ifndef __Lightning_H__
#define __Lightning_H__

@import Foundation;
#include "Universe.objc.h"


FOUNDATION_EXPORT NSString* LightningChannelBalance(NSError** error);

FOUNDATION_EXPORT NSString* LightningConnectPeer(NSString* targetAddress, NSError** error);

FOUNDATION_EXPORT NSString* LightningCreateBip39Seed(NSError** error);

FOUNDATION_EXPORT NSString* LightningGetInfo(NSError** error);

FOUNDATION_EXPORT NSString* LightningGetTransactions(NSError** error);

FOUNDATION_EXPORT NSString* LightningListChannels(NSError** error);

FOUNDATION_EXPORT NSString* LightningListPayments(NSError** error);

FOUNDATION_EXPORT NSString* LightningNewAddress(int32_t addressType, NSError** error);

FOUNDATION_EXPORT NSString* LightningOpenChannelSync(NSString* nodePubKeyHex, int64_t localAmount, NSError** error);

/**
 * On iOS the system may choose to reclaim resources while the app is
suspended. In this case, the socket grpc uses for listening can be reclaimed
causing the server to terminate. The simplest and most robust thing to do in
this case is to destroy the grpc server when the app is backgrounded and
re-create it again in Resume.
 */
FOUNDATION_EXPORT void LightningPause(void);

FOUNDATION_EXPORT NSString* LightningPendingChannels(NSError** error);

FOUNDATION_EXPORT void LightningResume(void);

FOUNDATION_EXPORT NSString* LightningSendPaymentSync(NSString* paymentRequest, NSError** error);

/**
 * Start is called once when the application first starts.
 */
FOUNDATION_EXPORT BOOL LightningStart(NSString* dir, NSString* mnemonic, NSError** error);

FOUNDATION_EXPORT void LightningStop(void);

FOUNDATION_EXPORT NSString* LightningWalletBalance(NSError** error);

FOUNDATION_EXPORT BOOL LightningWalletExists(NSString* dataDir);

#endif
